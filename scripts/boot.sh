#!/bin/bash
SECTORSIZE=512
BOOTLOADER_INCLUDE_FILE=bootloader/boot0.h

BOOT1_BINARY_LOCATION=bootloader/boot1.bin
BOOT1_BINARY_FILESIZE=$(stat -c%s "$BOOT1_BINARY_LOCATION")
echo "Size of $BOOT1_BINARY_LOCATION = $BOOT1_BINARY_FILESIZE bytes."

KERNEL_BINARY_LOCATION=kernel/kernel.bin
KERNEL_BINARY_FILESIZE=$(stat -c%s "$KERNEL_BINARY_LOCATION")
echo "Size of $KERNEL_BINARY_LOCATION = $KERNEL_BINARY_FILESIZE bytes."

BOOT1_BINARY_ROUNDUP_SIZE=$((BOOT1_BINARY_FILESIZE+SECTORSIZE))
BOOT1_BINARY_FINAL_SIZE=$((BOOT1_BINARY_ROUNDUP_SIZE/SECTORSIZE))

if [[ "$BOOT1_BINARY_FINAL_SIZE" -gt 1 ]]; then
	echo "Sector count for $BOOT1_BINARY_LOCATION = $BOOT1_BINARY_FINAL_SIZE sectors."
else
	echo "Sector count for $BOOT1_BINARY_LOCATION = $BOOT1_BINARY_FINAL_SIZE sector."
fi

KERNEL_BINARY_ROUNDUP_SIZE=$((KERNEL_BINARY_FILESIZE+SECTORSIZE))
KERNEL_BINARY_FINAL_SIZE=$((KERNEL_BINARY_ROUNDUP_SIZE/SECTORSIZE))

if [[ "$BOOT1_BINARY_FINAL_SIZE" -gt 1 ]]; then
	echo "Sector count for $KERNEL_BINARY_LOCATION = $KERNEL_BINARY_FINAL_SIZE sectors."
else
	echo "Sector count for $KERNEL_BINARY_LOCATION = $KERNEL_BINARY_FINAL_SIZE sector."
fi

echo "$KERNEL_BINARY_FINAL_SIZE" > bootloader/boot0.h

sed -i '1s/^/.set I386_KERNEL_SIZE, /' bootloader/boot0.h

sed -i '1 a .set I386_BOOT1_SIZE, ' bootloader/boot0.h
echo "$(cat $BOOTLOADER_INCLUDE_FILE)$BOOT1_BINARY_FINAL_SIZE" > $BOOTLOADER_INCLUDE_FILE